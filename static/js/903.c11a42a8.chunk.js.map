{"version":3,"file":"static/js/903.c11a42a8.chunk.js","mappings":"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","sources":["data/warrantiesData.js","data/weatherData.js","data/videogamesData.js","data/dogsData.js","data/unoData.js","data/allProjectsData.js","components/projects/ProjectSingle.jsx","components/projects/ProjectsFilter.jsx","components/projects/ProjectsGrid.jsx","data/projects.js","context/ProjectsContext.jsx"],"sourcesContent":["// Import images\nimport warranties3 from '../images/projects/warranties/deliver.png';\nimport warranties2 from '../images/projects/warranties/home.png';\nimport warranties1 from '../images/projects/warranties/receive-toast.png';\n\nexport const data = {\n  ProjectHeader: {\n    title: 'Administrador de Garantias',\n    publishDate: 'Noviembre, 2023',\n    tags: 'Aplicacion web',\n  },\n  ProjectImages: [\n    {\n      id: 1,\n      title: 'Detail',\n      img: warranties1,\n    },\n    {\n      id: 2,\n      title: 'Create',\n      img: warranties2,\n    },\n    {\n      id: 3,\n      title: 'Recibe',\n      img: warranties3,\n    },\n  ],\n  ProjectInfo: {\n    ClientHeading: 'Cliente',\n    CompanyInfo: [\n      {\n        id: 1,\n        title: 'Nombre',\n        details: 'Love & Secret Boutique',\n      },\n      {\n        id: 2,\n        title: 'Servicios',\n        details: 'Desarrollo web',\n      },\n    ],\n    ObjectivesHeading: 'Objetivo',\n    ObjectivesDetails:\n      'Desarrollar un sistema con el cual se diera manejo a las garantías entrantes al almacén para llevar un registro detallado de estas.',\n    Technologies: [\n      {\n        title: 'Herramientas & Tecnologías',\n        techs: [\n          'HTML',\n          'CSS',\n          'JavaScript',\n          'Next.js',\n          'PrimeReact',\n          'TailwindCSS',\n          'SQLite',\n          'GraphQL',\n        ],\n      },\n    ],\n    ProjectDetailsHeading: 'Acerca de',\n    ProjectDetails: [\n      {\n        id: 1,\n        details:\n          'Un software cuya principal finalidad es administrar y tener un historial de las garantías. La aplicación fue construida usando Next.js, para la parte de UI se usó la librería de componentes PrimeReact, y para el servidor se hizo uso de GraphQL para facilitar las operaciones CRUD.',\n      },\n      {\n        id: 2,\n        details:\n          'La aplicación consta de una tabla principal donde se listan las garantías existentes, su estado y más detalles. Desde allí se podrán acceder también a los detalles de la misma. Cuenta con la opción de manejar las garantías como cambios por producto nuevo, de igual manera llevando registros. El módulo de vendedores se maneja por códigos de vendedor, lo cual ayuda a conocer a quién atiende las garantías. Cuenta también con la opción de imprimir un comprobante de recepción que puede ser entregado al cliente, el cual puede ser reimpreso por el administrador del punto únicamente con una clave personal que él poseerá.',\n      },\n    ],\n    SocialSharingHeading: '',\n    SocialSharing: [],\n  },\n};\n","// Import images\nimport weather1 from '../images/projects/weather/home.png';\nimport weather2 from '../images/projects/weather/mobile.png';\nimport weather3 from '../images/projects/weather/not-found.png';\n\n// Import icons\nimport { FiExternalLink, FiGithub } from 'react-icons/fi';\n\nexport const data = {\n  ProjectHeader: {\n    title: 'Aplicacion del clima',\n    publishDate: 'Septiembre, 2023',\n    tags: 'Aplicacion web',\n  },\n  ProjectImages: [\n    {\n      id: 1,\n      title: 'mobile',\n      img: weather1,\n    },\n    {\n      id: 2,\n      title: 'home-sun',\n      img: weather2,\n    },\n    {\n      id: 3,\n      title: 'not-found',\n      img: weather3,\n    },\n  ],\n  ProjectInfo: {\n    ClientHeading: 'Cliente',\n    CompanyInfo: [\n      {\n        id: 1,\n        title: 'Nombre',\n        details: 'Proyecto Personal',\n      },\n      {\n        id: 2,\n        title: 'Servicios',\n        details: 'Diseño UI/UX - Desarrollo web - Responsive',\n      },\n      {\n        id: 3,\n        title: 'Encuentrala en',\n        details: 'https://rogeliomenco.github.io/weather',\n      },\n    ],\n    ObjectivesHeading: 'Objetivo',\n    ObjectivesDetails:\n      'Desarrollar una aplicación web con una interfaz intuitiva y atractiva para consultar el clima de diferentes ciudades en tiempo real.',\n    Technologies: [\n      {\n        title: 'Herramientas & Tecnologías',\n        techs: [\n          'HTML',\n          'CSS',\n          'JavaScript',\n          'React.js',\n          'TailwindCSS',\n          'OpenWeatherAPI',\n          'Vite',\n        ],\n      },\n    ],\n    ProjectDetailsHeading: 'Objetivo',\n    ProjectDetails: [\n      {\n        id: 1,\n        details:\n          'Este proyecto personal tiene como objetivo principal el desarrollo de una aplicación web para consultar el clima en tiempo real de diferentes ciudades. Utilizando tecnologías como React.js y TailwindCSS para la estructura, lógica y diseño, para crear una interfaz de usuario moderna y atractiva, la aplicación permitirá a los usuarios obtener información precisa sobre el clima de cualquier ubicación seleccionada, la integración de la API de OpenWeather proporcionará datos meteorológicos actualizados.',\n      },\n      {\n        id: 2,\n        details:\n          'La aplicación ofrecerá una experiencia de usuario intuitiva y atractiva, con una interfaz diseñada para facilitar la consulta del clima de manera rápida y sencilla. Los usuarios podrán ingresar el nombre de una ciudad para ver el pronóstico del tiempo actual y futuro, incluyendo detalles como temperatura, condiciones climáticas, velocidad del viento y más. La aplicación también proporcionará la opcion para personalizar unidades de medida',\n      },\n    ],\n    SocialSharingHeading: 'Links',\n    SocialSharing: [\n      {\n        id: 1,\n        name: 'GitHub',\n        icon: <FiGithub />,\n        url: 'https://github.com/RogelioMenco/weather',\n      },\n      {\n        id: 2,\n        name: 'Facebook',\n        icon: <FiExternalLink />,\n        url: 'https://rogeliomenco.github.io/weather',\n      },\n    ],\n  },\n};\n","// Import images\nimport videogames3 from '../images/projects/videogames//create.png';\nimport videogames1 from '../images/projects/videogames/detalle videogames.png';\nimport videogames2 from '../images/projects/videogames/home.png';\n\n// Import icons\nimport { FiExternalLink, FiGithub } from 'react-icons/fi';\n\nexport const data = {\n  ProjectHeader: {\n    title: 'Videojuegos',\n    publishDate: 'Septiembre, 2023',\n    tags: 'Aplicacion web',\n  },\n  ProjectImages: [\n    {\n      id: 1,\n      title: 'Detalle Videgames',\n      img: videogames1,\n    },\n    {\n      id: 2,\n      title: 'Home',\n      img: videogames2,\n    },\n    {\n      id: 3,\n      title: 'Creacion',\n      img: videogames3,\n    },\n  ],\n  ProjectInfo: {\n    ClientHeading: 'Institucion',\n    CompanyInfo: [\n      {\n        id: 1,\n        title: 'Nombre',\n        details: 'Henry Bootcamp',\n      },\n      {\n        id: 2,\n        title: 'Servicios',\n        details: 'Diseño UI/UX - Desarrollo web',\n      },\n      {\n        id: 3,\n        title: 'Encuentrala en',\n        details: 'https://rogeliomenco.github.io/videogames',\n      },\n    ],\n    ObjectivesHeading: 'Objetivo',\n    ObjectivesDetails:\n      'Desarrollar una aplicación que permita a los usuarios explorar un catálogo de juegos, mostrando la portada, descripción y ranking de cada juego. Además, la aplicación permitirá a los usuarios crear un nuevo juego, proporcionando la información necesaria como portada, descripción y asignando un ranking.',\n    Technologies: [\n      {\n        title: 'Herramientas & Tecnologías',\n        techs: [\n          'HTML',\n          'CSS',\n          'JavaScript',\n          'React.js',\n          'Redux',\n          'Express',\n          'PostgreSQL',\n          'Sequalize',\n          'RAWG API',\n        ],\n      },\n    ],\n    ProjectDetailsHeading: 'Acerca de',\n    ProjectDetails: [\n      {\n        id: 1,\n        details:\n          'La aplicación actualmente desarrollada permite a los usuarios explorar un catálogo de juegos, mostrando la portada, descripción y ranking de cada juego. Utilizando tecnologías como HTML, CSS y JavaScript para la estructura, diseño y funcionalidad del cliente en el navegador, respectivamente, junto con React.js y Redux para la gestión del estado de la aplicación, la aplicación ofrece una experiencia fluida y receptiva para navegar por el catálogo de juegos. Además, se integra la RAWG API para obtener datos actualizados y precisos sobre los juegos disponibles.',\n      },\n      {\n        id: 2,\n        details:\n          'Para la implementación del backend, se utiliza Express.js como framework para manejar las solicitudes del cliente y la lógica de negocio, mientras que PostgreSQL se emplea como base de datos relacional para almacenar información sobre los juegos y su información asociada. Se utiliza Sequelize como ORM para facilitar la interacción con la base de datos y realizar operaciones CRUD de manera eficiente.',\n      },\n    ],\n    SocialSharingHeading: 'Links',\n    SocialSharing: [\n      {\n        id: 1,\n        name: 'GitHub',\n        icon: <FiGithub />,\n        url: 'https://github.com/RogelioMenco/videogames',\n      },\n      {\n        id: 2,\n        name: 'Facebook',\n        icon: <FiExternalLink />,\n        url: 'https://rogeliomenco.github.io/videogames',\n      },\n    ],\n  },\n};\n","// Import images\n\nimport dogs3 from '../images/projects/dogs/create.png';\nimport dogs2 from '../images/projects/dogs/home2.png';\nimport dogs1 from '../images/projects/dogs/landing.png';\n\n// Import icons\nimport { FiExternalLink, FiGithub } from 'react-icons/fi';\n\nexport const data = {\n  ProjectHeader: {\n    title: 'Gestor de razas',\n    publishDate: 'Agosto, 2023',\n    tags: 'Aplicacion web',\n  },\n  ProjectImages: [\n    {\n      id: 1,\n      title: 'dogs',\n      img: dogs1,\n    },\n    {\n      id: 2,\n      title: 'dogs',\n      img: dogs2,\n    },\n    {\n      id: 3,\n      title: 'dogs',\n      img: dogs3,\n    },\n  ],\n  ProjectInfo: {\n    ClientHeading: 'Institucion',\n    CompanyInfo: [\n      {\n        id: 1,\n        title: 'Nombre',\n        details: 'Henry Bootcamp',\n      },\n      {\n        id: 2,\n        title: 'Servicios',\n        details: 'Diseño UI/UX - Desarrollo web',\n      },\n      {\n        id: 3,\n        title: 'Encuentrala en',\n        details: 'https://rogeliomenco.github.io/dogs',\n      },\n    ],\n    ObjectivesHeading: 'Objetivo',\n    ObjectivesDetails:\n      'Desarrollar una aplicación que permita a los usuarios explorar una variedad de razas de perros, mostrando una imagen ilustrativa y proporcionando información detallada sobre cada raza. Además, la aplicación permitirá a los usuarios crear una nueva raza de perro, incluyendo la opción de adjuntar una imagen ilustrativa y agregar información personalizada.',\n    Technologies: [\n      {\n        title: 'Herramientas & Tecnologías',\n        techs: [\n          'HTML',\n          'CSS',\n          'JavaScript',\n          'React.js',\n          'Express',\n          'PostgreSQL',\n          'Sequalize',\n          'DogsAPI',\n        ],\n      },\n    ],\n    ProjectDetailsHeading: 'Acerca de',\n    ProjectDetails: [\n      {\n        id: 1,\n        details:\n          'La aplicación permite a los usuarios explorar una variedad de razas de perros, mostrando una imagen ilustrativa y proporcionando información detallada sobre cada raza. Utilizando tecnologías como HTML, CSS y JavaScript para la estructura, diseño y funcionalidad del cliente en el navegador, respectivamente, junto con React.js para la creación de una interfaz de usuario interactiva y atractiva, la aplicación ofrece una experiencia intuitiva para explorar y aprender sobre diferentes razas de perros. Además, se integra la DogsAPI para obtener datos actualizados y precisos sobre las razas de perros disponibles.',\n      },\n      {\n        id: 2,\n        details:\n          'Para la implementación del backend, se utiliza Express.js como framework para manejar las solicitudes del cliente y la lógica de negocio, mientras que PostgreSQL se emplea como base de datos relacional para almacenar información sobre las razas de perros y su información asociada. Se utiliza Sequelize como ORM para facilitar la interacción con la base de datos y realizar operaciones de manera eficiente.',\n      },\n    ],\n    SocialSharingHeading: 'Share This',\n    SocialSharing: [\n      {\n        id: 1,\n        name: 'GitHub',\n        icon: <FiGithub />,\n        url: 'https://github.com/RogelioMenco/dogs',\n      },\n      {\n        id: 2,\n        name: 'Facebook',\n        icon: <FiExternalLink />,\n        url: 'https://rogeliomenco.github.io/dogs',\n      },\n    ],\n  },\n};\n","// Import images\nimport uno2 from '../images/projects/uno/select-color.png';\nimport uno1 from '../images/projects/uno/uno-playing.png';\nimport uno3 from '../images/projects/uno/uno-wins.png';\n\n// Import icons\nimport { FiGithub } from 'react-icons/fi';\n\nexport const data = {\n  ProjectHeader: {\n    title: 'UNO',\n    publishDate: 'Noviembre, 2022',\n    tags: 'Aplicacion web',\n  },\n  ProjectImages: [\n    {\n      id: 1,\n      title: 'jugar',\n      img: uno1,\n    },\n    {\n      id: 2,\n      title: 'Select',\n      img: uno3,\n    },\n    {\n      id: 3,\n      title: 'wins',\n      img: uno2,\n    },\n  ],\n  ProjectInfo: {\n    ClientHeading: 'Cliente',\n    CompanyInfo: [\n      {\n        id: 1,\n        title: 'Nombre',\n        details: 'Proyecto Personal',\n      },\n      {\n        id: 2,\n        title: 'Servicios',\n        details: 'Diseño UI - Desarrollo web - Sockets',\n      },\n      {\n        id: 3,\n        title: 'Encuentrala en',\n        details: 'https://rogeliomenco.github.io/uno',\n      },\n    ],\n    ObjectivesHeading: 'Objetivo',\n    ObjectivesDetails:\n      'Desarrollar una aplicación basada en el juego UNO que permita a múltiples jugadores conectarse en tiempo real desde diferentes dispositivos para disfrutar de partidas interactivas y dinámicas.',\n    Technologies: [\n      {\n        title: 'Herramientas & Tecnologías',\n        techs: ['HTML', 'CSS', 'JavaScript', 'Python', 'Flask', 'Socket.io'],\n      },\n    ],\n    ProjectDetailsHeading: 'Acerca de',\n    ProjectDetails: [\n      {\n        id: 1,\n        details:\n          'Este proyecto tuvo como objetivo principal desarrollar una aplicación web basada en el juego de cartas UNO, que permitiera a varios jugadores conectarse en tiempo real desde diferentes dispositivos para disfrutar de partidas interactivas y dinámicas. La aplicación se construyó utilizando tecnologías como HTML, CSS y JavaScript para la estructura, diseño y funcionalidad del cliente en el navegador, mientras que Python se utilizó junto con el framework Flask para el desarrollo del servidor backend. Además, se implementó la biblioteca Socket.io para facilitar la comunicación bidireccional en tiempo real entre el servidor y los clientes, lo que permitió una experiencia de juego fluida y colaborativa.',\n      },\n      {\n        id: 2,\n        details:\n          'La aplicación permite a los jugadores crear y unirse a salas de juego virtuales, donde pueden enfrentarse en partidas de UNO con reglas personalizables. Durante el juego, los jugadores pueden disfrutar de funciones como el cambio de color de las cartas y la funcionalidad de cartas +2 y +4. Se visualiza el estado del juego en tiempo real, incluyendo el número de cartas en la mano de cada jugador y la carta actual en juego. Se implementan funciones para gestionar el flujo del juego, como el reparto de cartas, el cambio de turno, la aplicación de penalizaciones y la detección de ganadores. En resumen, la aplicación proporciona una experiencia de juego social y entretenida para los usuarios, combinando la emoción del juego de cartas UNO con la conveniencia de jugar en línea con amigos y familiares desde cualquier lugar.',\n      },\n    ],\n    SocialSharingHeading: 'Links',\n    SocialSharing: [\n      {\n        id: 1,\n        name: 'GitHub',\n        icon: <FiGithub />,\n        url: 'https://github.com/RogelioMenco/uno',\n      },\n    ],\n  },\n};\n","import { data as countriesData } from './countriesData';\nimport { data as warrantiesData } from './warrantiesData';\nimport { data as weatherData } from './weatherData';\nimport { data as videogamesData } from './videogamesData';\nimport { data as dogsData } from './dogsData';\nimport { data as unoData } from './unoData';\n\nexport const AllProjectsData = {\n  1: countriesData,\n  2: warrantiesData,\n  3: weatherData,\n  4: videogamesData,\n  5: dogsData,\n  6: unoData,\n};\n","import { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { useSingleProject } from '../../context/SingleProjectContext';\nimport { AllProjectsData } from '../../data/allProjectsData';\n\nconst ProjectSingle = ({ title, category, image, id }) => {\n  const { setSingleProjectData } = useSingleProject();\n\n  const handleProjectClick = () => {\n    setSingleProjectData(AllProjectsData[id]);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1, delay: 1 }}\n      transition={{\n        ease: 'easeInOut',\n        duration: 0.7,\n        delay: 0.15,\n      }}\n    >\n      <Link to=\"/proyectos/single\" aria-label=\"Proyecto\">\n        <div\n          className=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\"\n          onClick={handleProjectClick}\n        >\n          <div\n            id=\"image-container\"\n            className=\"flex justify-center items-center rounded-t-xl p-3 bg-ternary-light dark:bg-secondary-dark min-h-[295] max-h-[295]\"\n            style={{\n              minHeight: '270px',\n              maxHeight: '270px',\n            }}\n          >\n            <img\n              src={image}\n              className=\"rounded-xl border-none\"\n              alt=\"Proyecto\"\n            />\n          </div>\n          <div className=\"text-center px-4 py-6\">\n            <p className=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">\n              {title}\n            </p>\n            <span className=\"text-lg text-ternary-dark dark:text-ternary-light\">\n              {category}\n            </span>\n          </div>\n        </div>\n      </Link>\n    </motion.div>\n  );\n};\n\nexport default ProjectSingle;\n","const selectOptions = ['Aplicacion web', 'Sockets', 'Diseño UI/UX'];\n\nconst ProjectsFilter = ({ setSelectProject }) => {\n  return (\n    <select\n      onChange={(e) => {\n        setSelectProject(e.target.value);\n      }}\n      className=\"font-general-medium \n                px-4\n                sm:px-6\n                py-2\n                border\n                dark:border-secondary-dark\n                rounded-lg\n                text-sm\n                sm:text-md\n                dark:font-medium\n                bg-secondary-light\n                dark:bg-ternary-dark\n                text-primary-dark\n                dark:text-ternary-light\n            \"\n    >\n      <option value={setSelectProject} className=\"text-sm sm:text-md\">\n        Todos proyectos\n      </option>\n\n      {selectOptions.map((option) => (\n        <option className=\"text-normal sm:text-md\" key={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default ProjectsFilter;\n","import { useContext } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport ProjectSingle from './ProjectSingle';\nimport { ProjectsContext } from '../../context/ProjectsContext';\nimport ProjectsFilter from './ProjectsFilter';\n\nconst ProjectsGrid = () => {\n  const {\n    projects,\n    searchProject,\n    setSearchProject,\n    searchProjectsByTitle,\n    selectProject,\n    setSelectProject,\n    selectProjectsByCategory,\n  } = useContext(ProjectsContext);\n\n  return (\n    <section className=\"py-5 sm:py-10 mt-5 sm:mt-10\">\n      <div className=\"text-center\">\n        <p className=\"font-general-medium text-2xl sm:text-4xl mb-1 text-ternary-dark dark:text-ternary-light\">\n          Mis ultimos proyectos\n        </p>\n      </div>\n\n      <div className=\"mt-10 sm:mt-16\">\n        <h3\n          className=\"font-general-regular \n                        text-center text-secondary-dark\n                        dark:text-ternary-light\n                        text-md\n                        sm:text-xl\n                        mb-3\n                        \"\n        >\n          Buscar proyectos por titulo o categorio\n        </h3>\n        <div\n          className=\"\n                        flex\n                        justify-between\n                        border-b border-primary-light\n                        dark:border-secondary-dark\n                        pb-3\n                        gap-3\n                        \"\n        >\n          <div className=\"flex justify-between gap-2\">\n            <span\n              className=\"\n                                hidden\n                                sm:block\n                                bg-primary-light\n                                dark:bg-ternary-dark\n                                p-2.5\n                                shadow-sm\n                                rounded-xl\n                                cursor-pointer\n                                \"\n            >\n              <FiSearch className=\"text-ternary-dark dark:text-ternary-light w-5 h-5\"></FiSearch>\n            </span>\n            <input\n              onChange={(e) => {\n                setSearchProject(e.target.value);\n              }}\n              className=\"font-general-medium \n                                pl-3\n                                pr-1\n                                sm:px-4\n                                py-2\n                                border \n                            border-gray-200\n                                dark:border-secondary-dark\n                                rounded-lg\n                                text-sm\n                                sm:text-md\n                                bg-secondary-light\n                                dark:bg-ternary-dark\n                                text-primary-dark\n                                dark:text-ternary-light\n                                \"\n              id=\"name\"\n              name=\"name\"\n              type=\"search\"\n              required=\"\"\n              placeholder=\"Buscar proyectos\"\n              aria-label=\"Name\"\n            />\n          </div>\n\n          <ProjectsFilter setSelectProject={setSelectProject} />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-6 sm:gap-10\">\n        {selectProject\n          ? selectProjectsByCategory.map((project) => (\n              <ProjectSingle\n                title={project.title}\n                category={project.category}\n                image={project.img}\n                id={project.id}\n                key={project.id}\n              />\n            ))\n          : searchProject\n            ? searchProjectsByTitle.map((project) => (\n                <ProjectSingle\n                  title={project.title}\n                  category={project.category}\n                  image={project.img}\n                  id={project.id}\n                  key={project.id}\n                />\n              ))\n            : projects.map((project) => (\n                <ProjectSingle\n                  title={project.title}\n                  category={project.category}\n                  image={project.img}\n                  id={project.id}\n                  key={project.id}\n                />\n              ))}\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectsGrid;\n","// Import images\nimport CountriesCard from '../images/projects/countries/home.png';\nimport DogsCard from '../images/projects/dogs/home.png';\nimport UnoCard from '../images/projects/uno/home.png';\nimport VideoGamesCard from '../images/projects/videogames/home2.png';\nimport WarrantiesCard from '../images/projects/warranties/home.png';\nimport WeatherCard from '../images/projects/weather/home.png';\n\nexport const projectsData = [\n  {\n    id: 1,\n    title: 'Paises & Mas',\n    category: 'Aplicacion web',\n    img: CountriesCard,\n  },\n  {\n    id: 2,\n    title: 'Administrador de Garantias',\n    category: 'Aplicacion web',\n    img: WarrantiesCard,\n  },\n  {\n    id: 3,\n    title: 'Aplicacion del clima',\n    category: 'Diseño UI/UX',\n    img: WeatherCard,\n  },\n  {\n    id: 4,\n    title: 'Videojuegos',\n    category: 'Aplicacion web',\n    img: VideoGamesCard,\n  },\n  {\n    id: 5,\n    title: 'Gestor de razas',\n    category: 'Aplicacion web',\n    img: DogsCard,\n  },\n\n  {\n    id: 6,\n    title: 'UNO',\n    category: 'Sockets / Aplicacion web',\n    img: UnoCard,\n  },\n];\n","import { useState, createContext } from 'react';\nimport { projectsData } from '../data/projects';\n\n// Create projects context\nexport const ProjectsContext = createContext();\n\n// Create the projects context provider\nexport const ProjectsProvider = (props) => {\n  const [projects, setProjects] = useState(projectsData);\n  const [searchProject, setSearchProject] = useState('');\n  const [selectProject, setSelectProject] = useState('');\n\n  // Search projects by project title\n  const searchProjectsByTitle = projects.filter((item) => {\n    const result = item.title\n      .toLowerCase()\n      .includes(searchProject.toLowerCase())\n      ? item\n      : searchProject === ''\n        ? item\n        : '';\n    return result;\n  });\n\n  // Select projects by project category\n  const selectProjectsByCategory = projects.filter((item) => {\n    let category =\n      item.category.charAt(0).toUpperCase() + item.category.slice(1);\n    return category.includes(selectProject);\n  });\n\n  return (\n    <ProjectsContext.Provider\n      value={{\n        projects,\n        setProjects,\n        searchProject,\n        setSearchProject,\n        searchProjectsByTitle,\n        selectProject,\n        setSelectProject,\n        selectProjectsByCategory,\n      }}\n    >\n      {props.children}\n    </ProjectsContext.Provider>\n  );\n};\n"],"names":["data","ProjectHeader","title","publishDate","tags","ProjectImages","id","img","warranties2","warranties3","ProjectInfo","ClientHeading","CompanyInfo","details","ObjectivesHeading","ObjectivesDetails","Technologies","techs","ProjectDetailsHeading","ProjectDetails","SocialSharingHeading","SocialSharing","weather1","weather2","weather3","name","icon","_jsx","FiGithub","url","FiExternalLink","videogames3","dogs2","dogs3","uno2","AllProjectsData","countriesData","warrantiesData","weatherData","videogamesData","dogsData","unoData","_ref","category","image","setSingleProjectData","useSingleProject","motion","div","initial","opacity","animate","delay","transition","ease","duration","children","Link","to","_jsxs","className","onClick","handleProjectClick","style","minHeight","maxHeight","src","alt","selectOptions","setSelectProject","onChange","e","target","value","map","option","ProjectsGrid","projects","searchProject","setSearchProject","searchProjectsByTitle","selectProject","selectProjectsByCategory","useContext","ProjectsContext","FiSearch","type","required","placeholder","ProjectsFilter","project","ProjectSingle","projectsData","CountriesCard","VideoGamesCard","DogsCard","UnoCard","createContext","ProjectsProvider","props","setProjects","useState","filter","item","toLowerCase","includes","charAt","toUpperCase","slice","Provider"],"sourceRoot":""}